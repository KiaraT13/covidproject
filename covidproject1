-- Checking that my data is loded into BigQuery

SELECT *
FROM `master-ember-388116.PortfolioProject.covid_deaths`
WHERE continent is not null
ORDER BY 3,4
--
SELECT *
FROM `master-ember-388116.PortfolioProject.covid_vaccinations`
WHERE continent is not null
ORDER BY 3,4

-- Select the data that I'm using

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM `master-ember-388116.PortfolioProject.covid_deaths`
WHERE continent is not null
ORDER BY 1,2

-- Looking at total cases vs. total deaths

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS death_percentage
FROM `master-ember-388116.PortfolioProject.covid_deaths`
WHERE continent is not null
ORDER BY 1,2

-- Shows liklihood of death if you contract Covid in the U.S.

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS death_percentage
FROM `master-ember-388116.PortfolioProject.covid_deaths`
WHERE location = 'United States'
ORDER BY 1,2

-- Looking at total cases vs. Population
--Shows what percentage of the U.S. population contracted Covid

SELECT location, date, population, total_cases, (total_cases/population)*100 AS percent_pop_infected
FROM `master-ember-388116.PortfolioProject.covid_deaths`
WHERE location = 'United States'
ORDER BY 1,2

-- Looking at countries with highest infection rate compared to population

SELECT location, population, MAX(total_cases) AS highest_infection_count, MAX((total_cases/population))*100 AS percent_pop_infected
FROM `master-ember-388116.PortfolioProject.covid_deaths`
WHERE continent is not null
GROUP BY location, population
ORDER BY percent_pop_infected DESC

-- Showing countries wih the highest death count per population

SELECT location, MAX (total_deaths) AS total_death_count
FROM `master-ember-388116.PortfolioProject.covid_deaths`
WHERE continent is not null
GROUP BY location
ORDER BY total_death_count DESC

-- Breaking it down by continent
-- Showing continents with the highest death counts per population

SELECT location, MAX(total_deaths) AS total_death_count
FROM `master-ember-388116.PortfolioProject.covid_deaths`
WHERE continent is null
GROUP BY location
ORDER BY total_death_count DESC

-- Global numbers

SELECT SUM(new_cases) AS total_cases, SUM(new_deaths) AS total_deaths, SUM(new_deaths)/SUM(new_cases)*100 AS death_percentage
FROM `master-ember-388116.PortfolioProject.covid_deaths`
WHERE continent is not null
--GROUP BY date
ORDER BY 1,2
--
SELECT SUM(new_cases) AS total_cases, SUM(new_deaths) AS total_deaths, SUM(new_deaths)/SUM(new_cases)*100 AS death_percentage
FROM `master-ember-388116.PortfolioProject.covid_deaths`
WHERE continent is not null
GROUP BY date
ORDER BY 1,2

-- Looking at total population vs. vaccinations 

SELECT dea. continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
  SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS 
  rolling_vaxx_count
FROM `master-ember-388116.PortfolioProject.covid_deaths` dea
JOIN`master-ember-388116.PortfolioProject.covid_vaccinations` vac
  ON dea.location = vac.location
  AND dea.date = vac.date
WHERE dea.continent is not null
ORDER BY 2,3

-- TEMP TABLE

Create Table #PercentPopulationVaccinated(continent, location, date, population, new_vaccinations, rolling_vaxx_count)

INSERT INTO `master-ember-388116.PortfolioProject.percent-population-vaccinated`
SELECT dea. continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
  SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS 
  rolling_vaxx_count
FROM `master-ember-388116.PortfolioProject.covid_deaths` dea
JOIN`master-ember-388116.PortfolioProject.covid_vaccinations` vac
  ON dea.location = vac.location
  AND dea.date = vac.date
WHERE dea.continent is not null
ORDER BY 2,3

CREATE VIEW `master-ember-388116.PortfolioProject.percent-population-vaccinated`` AS
SELECT dea. continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
  SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS 
  rolling_vaxx_count
FROM `master-ember-388116.PortfolioProject.covid_deaths` dea
JOIN`master-ember-388116.PortfolioProject.covid_vaccinations` vac
  ON dea.location = vac.location
  AND dea.date = vac.date
WHERE dea.continent is not null
ORDER BY 2,3

--

CREATE VIEW `master-ember-388116.PortfolioProject.global-numbers`

